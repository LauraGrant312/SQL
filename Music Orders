

1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").

SELECT FirstName, LastName, CustomerId, Country
FROM customers
WHERE Country <> 'USA';

2. Show only the Customers from Brazil.

SELECT * FROM customers
WHERE Country = "Brazil";

3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.InvoiceDate, inv.BillingCountry
FROM chinook.invoices as inv
LEFT JOIN chinook.customers as cust
ON inv.CustomerId=cust.CustomerId
WHERE inv.BillingCountry = "Brazil";

4. Show the Employees who are Sales Agents.

SELECT * FROM employees
WHERE Title = "Sales Support Agent";

5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT BillingCountry
FROM invoices;

6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT emp.LastName, emp.FirstName, inv.InvoiceId
FROM employees emp
JOIN customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN invoices inv ON inv.CustomerId = cust.CustomerId;

7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT emp.LastName, emp.FirstName, cust.FirstName, cust.LastName, cust.Country, inv.Total
FROM employees emp
JOIN customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN invoices inv ON inv.CustomerId = cust.CustomerId;

8. How many Invoices were there in 2009?

SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

9. What are the total sales for 2009?

SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

10. Write a query that includes the purchased track name with each invoice line ID.

SELECT items.InvoiceId, tracks.Name
FROM invoice_items items
JOIN tracks ON tracks.TrackId = items.TrackId;

11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT ar.Name as Artist, t.Name as Track, i.InvoiceId
FROM invoice_items i
LEFT JOIN tracks t ON t.TrackId = i.TrackId
INNER JOIN albums a ON a.AlbumId=t.AlbumId
LEFT JOIN artists ar ON ar.ArtistId=a.ArtistId;

12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name as 'Track Name', a.Title as 'Album Title', m.Name as 'Media Type', g.Name as 'Genre'
FROM tracks t
JOIN media_types m
ON t.MediaTypeId = m.MediaTypeId
Join albums a 
ON t.AlbumId = a.AlbumId
JOIN genres g
ON g.GenreId = t.GenreId;

13. Show the total sales made by each sales agent.

SELECT emp.FirstName, emp.LastName, 
ROUND(SUM(inv.Total), 2) as 'Total Sales'
FROM employees emp
JOIN customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN invoices inv
ON cust.CustomerId = inv.CustomerId
WHERE emp.Title = "Sales Support Agent"
GROUP BY emp.FirstName;

14. Which sales agent made the most dollars in sales in 2009?

SELECT emp.FirstName, emp.LastName, ROUND(SUM(Inv.Total), 2) as 'Total Sales'
FROM employees emp
JOIN customers cust
ON emp.EmployeeId = cust.SupportRepId
JOIN invoices inv
ON cust.CustomerId = inv.CustomerId
WHERE emp.Title = "Sales Support Agent"
AND inv.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;
